// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/activities": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "活动列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":200,\"data\":{},\"msg\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "添加活动",
                "parameters": [
                    {
                        "type": "string",
                        "description": "活动主题",
                        "name": "Theme",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "活动时间",
                        "name": "Time",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "活动地址",
                        "name": "Address",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "活动内容",
                        "name": "Content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "活动人数",
                        "name": "Totol",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "1正常显示,0不显示",
                        "name": "Status",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{\"code\":201,\"data\":{},\"msg\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\":400,\"data\":null,\"msg\":\"请求参数错误\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "{\"code\":500,\"data\":null,\"msg\":\"添加文章失败\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/banners": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "首页封面列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":200,\"data\":{},\"msg\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/images": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "上传图片",
                "parameters": [
                    {
                        "type": "file",
                        "description": "上传图片",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{\"code\":201,\"data\":{},\"msg\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\":400,\"data\":null,\"msg\":\"图片验证失败\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "{\"code\":500,\"data\":null,\"msg\":\"上传失败\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/miens": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "风采列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "类型1团队风采,2活动风采",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":200,\"data\":{},\"msg\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "添加风采",
                "parameters": [
                    {
                        "type": "string",
                        "description": "类型1团队风采,2活动风采",
                        "name": "Type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "风采标题",
                        "name": "Title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "风采内容",
                        "name": "Content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "1正常显示,0不显示",
                        "name": "Status",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{\"code\":201,\"data\":{},\"msg\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\":400,\"data\":null,\"msg\":\"请求参数错误\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "{\"code\":500,\"data\":null,\"msg\":\"添加文章失败\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/theoies": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "理论分享列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":200,\"data\":{},\"msg\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/theoy": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "添加理论分享",
                "parameters": [
                    {
                        "type": "string",
                        "description": "理论标题",
                        "name": "Title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "理论内容",
                        "name": "Content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "阅读数量",
                        "name": "num",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "添加时间",
                        "name": "Create_time",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "1正常显示,0不显示",
                        "name": "Status",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{\"code\":201,\"data\":{},\"msg\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\":400,\"data\":null,\"msg\":\"请求参数错误\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "{\"code\":500,\"data\":null,\"msg\":\"添加文章失败\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":200,\"data\":{},\"msg\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
